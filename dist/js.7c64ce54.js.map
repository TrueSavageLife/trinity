{"version":3,"sources":["assets/js/index.js"],"names":["window","onload","AudioContext","canvas","document","querySelector","width","innerWidth","height","innerHeight","getContext","draw","ctx","clearRect","w","h","c","particles","length","p","strokeStyle","l","beginPath","moveTo","x","y","lineTo","xs","ys","stroke","move","timer","multiplyer","speed","spawnRadius","console","log","b","Math","random","lineWidth","lineCap","init","maxParts","a","initX","initY","r","round","g","push","color","setInterval"],"mappings":";AAAAA,OAAOC,OAAS,WACE,IAAIC,cAGtB,IAAIC,EAASC,SAASC,cAAc,WAIpC,GAHAF,EAAOG,MAAQN,OAAOO,WACtBJ,EAAOK,OAASR,OAAOS,YAEpBN,EAAOO,WAAY,CAyCXC,IAAAA,EAAT,WACEC,EAAIC,UAAU,EAAG,EAAGC,EAAGC,GACnB,IAAA,IAAIC,EAAI,EAAGA,EAAIC,EAAUC,OAAQF,IAAK,CACpCG,IAAAA,EAAIF,EAAUD,GAClBJ,EAAIQ,YAAc,oBAAsBD,EAAEE,EAAI,GAAK,IACnDT,EAAIU,YACJV,EAAIW,OAAOJ,EAAEK,EAAGL,EAAEM,GAClBb,EAAIc,OAAOP,EAAEK,EAAIL,EAAEE,EAAIF,EAAEQ,GAAIR,EAAEM,EAAIN,EAAEE,EAAIF,EAAES,IAC3ChB,EAAIiB,SAGNC,KAIOA,EAAT,aACQC,IAAU,MAAQC,GAAc,MAEpCA,GAAc,KAEG,IACfA,GAAc,IAGhBC,EAAQC,EAAcF,EAEtBG,QAAQC,IAAIJ,IAGV,IAAA,IAAIK,EAAI,EAAGA,EAAIpB,EAAUC,OAAQmB,IAAK,CACpClB,IAAAA,EAAIF,EAAUoB,GAClBlB,EAAEK,GAAKL,EAAEQ,GACTR,EAAEM,GAAKN,EAAES,IAENT,EAAEK,EAAI,GAAKL,EAAEM,EAAI,GAAKN,EAAEK,EAAIV,GAAKK,EAAEM,EAAIV,KACxCI,EAAEK,EAAIV,EAAI,EAAIwB,KAAKC,SAAWL,EAAcA,EAAc,EAC1Df,EAAEM,EAAIV,EAAI,EAAIuB,KAAKC,SAAWL,EAAcA,EAAc,EAC1Df,EAAEQ,IAAMR,EAAEK,EAAIV,EAAI,GAAKmB,EACvBd,EAAES,IAAMT,EAAEM,EAAIV,EAAI,GAAKkB,KA9EzBrB,EAAMT,EAAOO,WAAW,MACxBI,EAAIX,EAAOG,MACXS,EAAIZ,EAAOK,OACfI,EAAI4B,UAAY,EAChB5B,EAAI6B,QAAU,QAUV,IARAT,IAAAA,EAAa,EACbD,EAAQ,EAERG,EAAc,IACdD,EAAQC,EAAcF,EAEtBU,EAAO,GACPC,EAAW,KACPC,EAAI,EAAGA,EAAID,EAAUC,IAAK,CAC5BC,IAAAA,EAAQ/B,EAAI,EAAIwB,KAAKC,SAAWL,EAAcA,EAAc,EAC5DY,EAAQ/B,EAAI,EAAIuB,KAAKC,SAAWL,EAAcA,EAAc,EAE5Da,EAAIT,KAAKU,MAAsB,IAAhBV,KAAKC,UACpBU,EAAIX,KAAKU,MAAsB,IAAhBV,KAAKC,UACpBF,EAAIC,KAAKU,MAAsB,IAAhBV,KAAKC,UAExBG,EAAKQ,KAAK,CACR1B,EAAGqB,EACHpB,EAAGqB,EACHnB,IAAKkB,EAAQ/B,EAAI,GAAKmB,EACtBL,IAAKkB,EAAQ/B,EAAI,GAAKkB,EACtBZ,EAAmB,EAAhBiB,KAAKC,SACRY,MAAO,OAASJ,EAAI,IAAME,EAAI,IAAMZ,EAAI,MAOxC,IADApB,IAAAA,EAAY,GACRoB,EAAI,EAAGA,EAAIM,EAAUN,IAC3BpB,EAAUoB,GAAKK,EAAKL,GA+CtBe,YAAYzC,EAAM","file":"js.7c64ce54.js","sourceRoot":"..","sourcesContent":["window.onload = function() {\n    let context = new AudioContext();\n}\n\nlet canvas = document.querySelector(\"#canvas\")\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nif(canvas.getContext) {\n  let ctx = canvas.getContext('2d');\n  let w = canvas.width;\n  let h = canvas.height;\n  ctx.lineWidth = 2;\n  ctx.lineCap = 'round';\n\n  let multiplyer = 1\n  let timer = 0\n\n  let spawnRadius = 300;\n  let speed = spawnRadius / multiplyer;\n\n  let init = [];\n  let maxParts = 1200;\n  for(let a = 0; a < maxParts; a++) {\n    let initX = w / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n    let initY = h / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n\n    let r = Math.round(Math.random() * 255);\n    let g = Math.round(Math.random() * 255);\n    let b = Math.round(Math.random() * 255);\n\n    init.push({\n      x: initX,\n      y: initY,\n      xs: (initX - w / 2) / speed,\n      ys: (initY - h / 2) / speed,\n      l: Math.random() * 5,\n      color: 'rgb(' + r + ',' + g + ',' + b + ')'\n\n    })\n\n  }\n\n  let particles = [];\n  for(let b = 0; b < maxParts; b++) {\n    particles[b] = init[b];\n\n  }\n\n  function draw() {\n    ctx.clearRect(0, 0, w, h);\n    for(let c = 0; c < particles.length; c++) {\n      let p = particles[c];\n      ctx.strokeStyle = 'rgba(255,255,255,' + p.l / 20 + ')';\n      ctx.beginPath();\n      ctx.moveTo(p.x, p.y);\n      ctx.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\n      ctx.stroke();\n\n    }\n    move();\n\n  }\n\n  function move() {\n    if (!(timer++ % 100) && multiplyer <= 60) {\n\n      multiplyer += 0.05\n\n      if (multiplyer > 2) {\n        multiplyer += 0.5\n      }\n\n      speed = spawnRadius / multiplyer;\n\n      console.log(multiplyer)\n    }\n\n    for(let b = 0; b < particles.length; b++) {\n      let p = particles[b];\n      p.x += p.xs;\n      p.y += p.ys;\n\n      if(p.x < 0 || p.y < 0 || p.x > w || p.y > h) {\n        p.x = w / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n        p.y = h / 2 + Math.random() * spawnRadius - spawnRadius / 2;\n        p.xs = (p.x - w / 2) / speed;\n        p.ys = (p.y - h / 2) / speed;\n      }\n    }\n  }\n\n  setInterval(draw, 30);\n\n}\n"]}